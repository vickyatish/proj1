{"version":3,"sources":["sections.js","Sidebar.js","Content.js","App.js","reportWebVitals.js","index.js"],"names":["sections","id","title","Sidebar","activeSection","setActiveSection","useState","useEffect","handleScroll","forEach","section","element","document","getElementById","rect","getBoundingClientRect","top","window","innerHeight","addEventListener","removeEventListener","React","createElement","className","map","key","onClick","scrollIntoView","behavior","handleClick","Content","App","reportWebVitals","onPerfEntry","Function","then","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode"],"mappings":"qKACO,MAAMA,EAAW,CACpB,CAAEC,GAAI,WAAYC,MAAO,gBACzB,CAAED,GAAI,WAAYC,MAAO,aACzB,CAAED,GAAI,WAAYC,MAAO,cC0CdC,MA1Cf,WACE,MAAOC,EAAeC,GAAoBC,mBAAS,IA0BnD,OAxBAC,oBAAU,KACR,MAAMC,EAAeA,KACnBR,EAASS,QAASC,IAChB,MAAMC,EAAUC,SAASC,eAAeH,EAAQT,IAChD,GAAIU,EAAS,CACX,MAAMG,EAAOH,EAAQI,wBACjBD,EAAKE,KAAO,GAAKF,EAAKE,KAAOC,OAAOC,YAAc,GACpDb,EAAiBK,EAAQT,QAOjC,OADAgB,OAAOE,iBAAiB,SAAUX,GAC3B,IAAMS,OAAOG,oBAAoB,SAAUZ,IACjD,IAUDa,IAAAC,cAAA,OAAKC,UAAU,WACZvB,EAASwB,IAAKd,GACbW,IAAAC,cAAA,OACEG,IAAKf,EAAQT,GACbyB,QAASA,IAZIzB,KACnB,MAAMU,EAAUC,SAASC,eAAeZ,GACpCU,GACFA,EAAQgB,eAAe,CAAEC,SAAU,YAShBC,CAAYnB,EAAQT,IACnCsB,UAAW,iBAAgBnB,IAAkBM,EAAQT,GAAK,SAAW,KAEpES,EAAQR,UCnBJ4B,MAhBf,WACE,OACET,IAAAC,cAAA,OAAKC,UAAU,WACZvB,EAASwB,IAAKd,GACbW,IAAAC,cAAA,OAAKrB,GAAIS,EAAQT,GAAIwB,IAAKf,EAAQT,GAAIsB,UAAU,WAC9CF,IAAAC,cAAA,UAAKZ,EAAQR,OACbmB,IAAAC,cAAA,SACqC,qHCGhCS,MATf,WACE,OACEV,IAAAC,cAAA,OAAKC,UAAU,iBACbF,IAAAC,cAACnB,EAAO,MACRkB,IAAAC,cAACQ,EAAO,QCGCE,MAZSC,IAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,KAAKC,IAAkD,IAAjD,OAAEC,EAAM,OAAEC,EAAM,OAAEC,EAAM,OAAEC,EAAM,QAAEC,GAASL,EACpEC,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAOP,GACPQ,EAAQR,MCDDS,IAASC,WAAW/B,SAASC,eAAe,SACpD+B,OACHvB,IAAAC,cAACD,IAAMwB,WAAU,KACfxB,IAAAC,cAACS,EAAG,QAORC,K","file":"static/js/main.e97e6390.chunk.js","sourcesContent":["// sections.js\nexport const sections = [\n    { id: 'section1', title: 'Introduction' },\n    { id: 'section2', title: 'Chapter 1' },\n    { id: 'section3', title: 'Chapter 2' },\n    // Add more sections as needed\n  ];","// Sidebar.js\nimport React, { useState, useEffect } from 'react';\nimport { sections } from './sections';\n\nfunction Sidebar() {\n  const [activeSection, setActiveSection] = useState('');\n\n  useEffect(() => {\n    const handleScroll = () => {\n      sections.forEach((section) => {\n        const element = document.getElementById(section.id);\n        if (element) {\n          const rect = element.getBoundingClientRect();\n          if (rect.top >= 0 && rect.top <= window.innerHeight / 2) {\n            setActiveSection(section.id);\n          }\n        }\n      });\n    };\n\n    window.addEventListener('scroll', handleScroll);\n    return () => window.removeEventListener('scroll', handleScroll);\n  }, []);\n\n  const handleClick = (id) => {\n    const element = document.getElementById(id);\n    if (element) {\n      element.scrollIntoView({ behavior: 'smooth' });\n    }\n  };\n\n  return (\n    <div className=\"sidebar\">\n      {sections.map((section) => (\n        <div\n          key={section.id}\n          onClick={() => handleClick(section.id)}\n          className={`sidebar-item ${activeSection === section.id ? 'active' : ''}`}\n        >\n          {section.title}\n        </div>\n      ))}\n    </div>\n  );\n}\n\nexport default Sidebar;","// Content.js\nimport React from 'react';\nimport { sections } from './sections';\n\nfunction Content() {\n  return (\n    <div className=\"content\">\n      {sections.map((section) => (\n        <div id={section.id} key={section.id} className=\"section\">\n          <h2>{section.title}</h2>\n          <p>\n            {/* Replace with actual content */}\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis at velit maximus, molestie est a, tempor magna.\n          </p>\n        </div>\n      ))}\n    </div>\n  );\n}\n\nexport default Content;","// App.js\nimport React from 'react';\nimport Sidebar from './Sidebar';\nimport Content from './Content';\n\nfunction App() {\n  return (\n    <div className=\"app-container\">\n      <Sidebar />\n      <Content />\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}