{"version":3,"sources":["components/Sidebar.js","components/Introduction.js","components/WalkwayQuality.js","components/UnmarkedWalkway.js","components/Bibliography.js","components/Quiz.js","components/MainContent.js","App.js","index.js"],"names":["Sidebar","_ref","onContentChange","activeContent","React","createElement","className","map","item","key","onClick","Introduction","src","alt","WalkwayQuality","onCitationClick","UnmarkedWalkway","Bibliography","highlightedCitation","number","text","ref","Quiz","questions","question","options","answer","currentQuestion","setCurrentQuestion","useState","selectedOption","setSelectedOption","score","setScore","showScore","setShowScore","length","option","prevScore","handleOptionClick","disabled","handleNext","prevQuestion","MainContent","content","renderContent","App","contents","setActiveContent","setHighlightedCitation","handleContentChange","citationNumber","handlePrevious","previousIndex","indexOf","nextIndex","ReactDOM","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.1eef3199.chunk.js","sourcesContent":["import React from 'react';\nimport './Sidebar.css';\n\nconst Sidebar = ({ onContentChange, activeContent }) => {\n  const contents = ['Introduction', 'Walkway Quality', 'Unmarked Walkway', 'Bibliography', 'Quiz'];\n\n  return (\n    <div className=\"sidebar\">\n      <h2 className=\"sidebar-title\">Menu</h2>\n      <div className=\"sidebar-list-container\">\n        <ul className=\"sidebar-list\">\n          {contents.map((item) => (\n            <li\n              key={item}\n              className={`sidebar-item ${item === activeContent ? 'active' : ''}`}\n              onClick={() => onContentChange(item)}\n            >\n              {item}\n            </li>\n          ))}\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nexport default Sidebar;","import React from 'react';\nimport './Introduction.css'; // Ensure this CSS file exists\n\nconst Introduction = ({ onContentChange }) => {\n  return (\n    <div className=\"introduction\">\n      <h2>Using Computer Vision to Enhance Walkway Accessibility for the Visually Impaired</h2>\n      <p>\n        This tutorial explores the challenges visually impaired individuals face with walkways and introduces our proposed computer vision solutions.\n      </p>\n\n      <div className=\"cards-container\">\n        <div className=\"card\" onClick={() => onContentChange('Walkway Quality')}>\n          <h3>Assessing Walkways Quality (Normal/Damaged)</h3>\n          <img\n            src=\"https://i.postimg.cc/nVsSTGzy/temp-Image-Ykyb-SQ.avif\"\n            alt=\"Assessing Walkways Quality\"\n            className=\"card-image\"\n          />\n          <p>\n            Our system evaluates the condition of walkways to identify damages and ensure safe navigation for the visually impaired.\n          </p>\n        </div>\n\n        <div className=\"card\" onClick={() => onContentChange('Unmarked Walkway')}>\n          <h3>Curb Detection or Navigation in Unmarked Environments</h3>\n          <img\n            src=\"https://i.postimg.cc/bw6MgQWW/temp-Imagecg-YYBZ.avif\"\n            alt=\"Curb Detection\"\n            className=\"card-image\"\n          />\n          <p>\n            Utilizing advanced computer vision techniques, our solution detects curbs and assists users in navigating unmarked areas confidently.\n          </p>\n        </div>\n      </div>\n\n      <p>\n        Let's look at each of the cases in detail and how we propose to deal with them.\n      </p>\n    </div>\n  );\n};\n\nexport default Introduction;","import React from 'react';\nimport './WalkwayQuality.css';\n\nconst WalkwayQuality = ({ onCitationClick }) => {\n  return (\n    <div className=\"walkway-quality\">\n      <h2>Assessing Walkways Quality (Normal/Damaged)</h2>\n      <p>\n        Our system evaluates the condition of walkways to identify damages and ensure safe navigation for the visually impaired.\n      </p>\n      <p>\n        Previous approaches primarily captured RGB road images or sensor data (e.g., accelerometer and gyroscope) and exploited deep learning and machine learning algorithms for both detecting road cracks/potholes{' '}\n        <button className=\"citation-button\" onClick={() => onCitationClick(1)}>[1]</button>,{' '}\n        <button className=\"citation-button\" onClick={() => onCitationClick(2)}>[2]</button>,{' '}\n        <button className=\"citation-button\" onClick={() => onCitationClick(3)}>[3]</button>,{' '}\n        <button className=\"citation-button\" onClick={() => onCitationClick(4)}>[4]</button> and recognizing sidewalk anomalies{' '}\n        <button className=\"citation-button\" onClick={() => onCitationClick(5)}>[5]</button>,{' '}\n        <button className=\"citation-button\" onClick={() => onCitationClick(6)}>[6]</button>.\n      </p>\n\n      <p>\n        <img src=\"https://i.postimg.cc/W1MzGWhp/temp-Imagea-V1k-Jz.avif\"></img>\n      </p>\n\n      <p>In the more recent approaches, different sensor modalities were coupled with more complex deep learning architectures to achiever better performance.\n        The technologies used were - ConvNets, CNNs (Convolutional Neural Networks), LBP (Local Binary Pattern), Gabor Filter, YOLO v2 (You Only Look Once version 2) <button className=\"citation-button\" onClick={() => onCitationClick(7)}>[7]</button> for better real time performance.\n      </p>\n\n      <p>\n        The current trend is of using transformer based architectures to detect road surface anomalies <button className=\"citation-button\" onClick={() => onCitationClick(8)}>[8]</button> which can be used to assess sidewalk quality.\n      </p>\n\n      <p>\n        <img src=\"https://i.postimg.cc/vZB32Z1D/temp-Imagey-Tbo-HN.avif\"></img>\n      </p>\n    </div>\n  );\n};\n\nexport default WalkwayQuality;","import React from 'react';\nimport './UnmarkedWalkway.css';\n\nconst UnmarkedWalkway = () => {\n  return (\n    <div className=\"unmarked-walkway\">\n      <h1>Technologies in Computer Vision for Sidewalk Detection and Path Suggestion</h1>\n    \n    <p>Computer vision technologies are advancing rapidly, and one of their practical applications is in detecting sidewalks and suggesting safe paths for pedestrians, even when sidewalks are not clearly demarcated. Below, we discuss five key technologies that are pivotal in achieving these tasks.</p>\n    \n    <h2>1. Semantic Segmentation</h2>\n    <p>Semantic segmentation is a process where each pixel of an image is classified into a specific category. In the case of sidewalk detection, categories might include \"sidewalk\", \"road\", \"grass\", etc.</p>\n    <ul>\n        <li><strong>Technology:</strong> Fully Convolutional Networks (FCNs), U-Net, and DeepLab are commonly used neural networks for semantic segmentation.</li>\n        <li><strong>Use Case:</strong> By analyzing images from cameras, a system can determine which regions correspond to sidewalks and other surfaces, making it easier to detect safe pedestrian areas.</li>\n    </ul>\n\n    <h2>2. Object Detection and Recognition</h2>\n    <p>Object detection focuses on identifying and classifying objects within an image, such as vehicles, pedestrians, and obstacles. This is essential for sidewalk detection, as road elements like curbs and road edges help determine where it’s safe to walk.</p>\n    <ul>\n        <li><strong>Technology:</strong> YOLO (You Only Look Once), SSD (Single Shot Multibox Detector), and Faster R-CNN are common object detection models.</li>\n        <li><strong>Use Case:</strong> These models can recognize curbs, pedestrians, and other obstacles, providing contextual information that can infer the location of a sidewalk or safe pedestrian zones.</li>\n    </ul>\n\n    <h2>3. Depth Estimation and 3D Reconstruction</h2>\n    <p>Depth estimation involves determining the distance of objects and surfaces in an image, creating a 3D model of the surroundings. This helps systems differentiate between various surfaces like sidewalks, roads, and obstacles.</p>\n    <ul>\n        <li><strong>Technology:</strong> Stereo vision, monocular depth estimation using deep learning (e.g., MiDaS), or depth sensors are used for generating depth maps.</li>\n        <li><strong>Use Case:</strong> Depth maps generated from these technologies allow systems to perceive elevation changes, such as sidewalks or curbs, enabling safer path suggestions.</li>\n    </ul>\n\n    <h2>4. Lane and Edge Detection</h2>\n    <p>Lane and edge detection algorithms are primarily used in autonomous driving to detect road boundaries, but they can also be applied to sidewalk detection or path inference.</p>\n    <ul>\n        <li><strong>Technology:</strong> Hough Transform, canny edge detection, and deep learning models like LaneNet are commonly used techniques for lane and edge detection.</li>\n        <li><strong>Use Case:</strong> These algorithms can detect road edges and boundaries, allowing systems to infer potential sidewalk areas and provide pedestrians with a safe route, even when no sidewalk is marked.</li>\n    </ul>\n\n    <h2>5. LiDAR and Sensor Fusion</h2>\n    <p>LiDAR (Light Detection and Ranging) technology provides detailed 3D maps of the surroundings by emitting laser beams and measuring their reflections. When combined with camera data (sensor fusion), this can enhance the accuracy of sidewalk detection and path planning.</p>\n    <ul>\n        <li><strong>Technology:</strong> LiDAR and camera-based sensor fusion can be used for 3D environmental mapping.</li>\n        <li><strong>Use Case:</strong> LiDAR detects subtle differences in elevation and texture, helping to identify sidewalks or infer safe zones for pedestrians in areas without clear sidewalk markings.</li>\n    </ul>\n\n    <p>These technologies, when combined, provide a robust solution for detecting sidewalks and ensuring pedestrian safety in urban environments where infrastructure may not always be clearly defined.</p>\n    </div>\n  );\n};\n\nexport default UnmarkedWalkway;","import React from 'react';\nimport './Bibliography.css';\n\nconst Bibliography = ({ highlightedCitation }) => {\n  const references = [\n    { number: 1, text: 'Basavaraju, A., Du, J., Zhou, F., & Ji, J. (2019). A machine learning approach to road surface anomaly assessment using smartphone sensors. IEEE Sensors Journal, 20(5), 2635-2647.' },\n    { number: 2, text: 'Dharneeshkar, J., Aniruthan, S. A., Karthika, R., & Parameswaran, L. (2020, February). Deep Learning based Detection of potholes in Indian roads using YOLO. In 2020 international conference on inventive computation technologies (ICICT) (pp. 381-385). IEEE.' },\n    { number: 3, text: 'Wu, C., Wang, Z., Hu, S., Lepine, J., Na, X., Ainalis, D., & Stettler, M. (2020). An automated machine-learning approach for road pothole detection using smartphone sensor data. Sensors, 20(19), 5564.' },\n    { number: 4, text: 'Feng, X., Xiao, L., Li, W., Pei, L., Sun, Z., Ma, Z., ... & Ju, H. (2020). Pavement crack detection and segmentation method based on improved deep learning fusion model. Mathematical Problems in Engineering, 2020(1), 8515213.' },\n    { number: 5, text: 'Watanabe, T., Takahashi, H., Iwasawa, Y., Matsuo, Y., & Eguchi Yairi, I. (2019). Weakly supervised learning for evaluating road surface condition from wheelchair driving data. Information, 11(1), 2.' },\n    { number: 6, text: 'Iwasawa, Y., Yairi, I. E., & Matsuo, Y. (2016). Combining human action sensing of wheelchair users and machine learning for autonomous accessibility data collection. IEICE TRANSACTIONS on Information and Systems, 99(4), 1153-1161.' },\n    { number: 7, text: 'Mandal, Vishal & Uong, Lan & Adu-Gyamfi, Yaw. (2018). Automated Road Crack Detection Using Deep Convolutional Neural Networks. 5212-5215. 10.1109/BigData.2018.8622327. ' },\n    { number: 8, text: 'C. Y. Koh, M. Ali and A. Hendawi, \"CrackLens: Automated Sidewalk Crack Detection and Segmentation,\" in IEEE Transactions on Artificial Intelligence, doi: 10.1109/TAI.2024.3435608' }\n  ];\n\n  return (\n    <div className=\"bibliography\">\n      <h2>Bibliography</h2>\n      <ul>\n        {references.map((ref) => (\n          <li\n            key={ref.number}\n            className={`bibliography-item ${highlightedCitation === ref.number ? 'highlighted' : ''}`}\n          >\n            [{ref.number}] {ref.text}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default Bibliography;","import React, { useState } from 'react';\nimport './Quiz.css';\n\nconst Quiz = () => {\n  const questions = [\n    {\n      question: 'What technology is used to detect walkways quality?',\n      options: ['Machine Learning', 'Computer Vision', 'Blockchain', 'Cloud Computing'],\n      answer: 'Computer Vision',\n    },\n    {\n      question: 'What is the primary goal of curb detection?',\n      options: ['To improve aesthetics', 'To assist navigation', 'To reduce costs', 'To enhance speed'],\n      answer: 'To assist navigation',\n    },\n    // Add more questions as needed\n  ];\n\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [selectedOption, setSelectedOption] = useState('');\n  const [score, setScore] = useState(0);\n  const [showScore, setShowScore] = useState(false);\n\n  const handleOptionClick = (option) => {\n    setSelectedOption(option);\n    if (option === questions[currentQuestion].answer) {\n      setScore(prevScore => prevScore + 1);\n    }\n  };\n\n  const handleNext = () => {\n    setSelectedOption('');\n    if (currentQuestion + 1 < questions.length) {\n      setCurrentQuestion(prevQuestion => prevQuestion + 1);\n    } else {\n      setShowScore(true);\n    }\n  };\n\n  return (\n    <div className=\"quiz-container\">\n      <div className=\"quiz-card\">\n        <h2 className=\"quiz-title\">Quiz</h2>\n        {showScore ? (\n          <div className=\"score-section\">\n            You scored <span>{score}</span> out of <span>{questions.length}</span>\n          </div>\n        ) : (\n          <div className=\"quiz-section\">\n            <div className=\"question-section\">\n              <div className=\"question-count\">\n                <span>Question {currentQuestion + 1}</span>/{questions.length}\n              </div>\n              <div className=\"question-text\">{questions[currentQuestion].question}</div>\n            </div>\n            <div className=\"answer-section\">\n              {questions[currentQuestion].options.map((option) => (\n                <button\n                  key={option}\n                  className={`option-button ${selectedOption === option ? 'selected' : ''}`}\n                  onClick={() => handleOptionClick(option)}\n                  disabled={selectedOption !== ''}\n                >\n                  {option}\n                </button>\n              ))}\n            </div>\n            {selectedOption && (\n              <button onClick={handleNext} className=\"next-button\">\n                {currentQuestion + 1 === questions.length ? 'Finish' : 'Next'}\n              </button>\n            )}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Quiz;","import React from 'react';\nimport './MainContent.css';\nimport Introduction from './Introduction';\nimport WalkwayQuality from './WalkwayQuality';\nimport UnmarkedWalkway from './UnmarkedWalkway';\nimport Bibliography from './Bibliography';\nimport Quiz from './Quiz';\n\nconst MainContent = ({ content, highlightedCitation, onCitationClick, onContentChange }) => {\n  const renderContent = () => {\n    switch (content) {\n      case 'Introduction':\n        return <Introduction onContentChange={onContentChange} />;\n      case 'Walkway Quality':\n        return <WalkwayQuality onCitationClick={onCitationClick} />;\n      case 'Unmarked Walkway':\n        return <UnmarkedWalkway />;\n      case 'Bibliography':\n        return <Bibliography highlightedCitation={highlightedCitation} />;\n      case 'Quiz':\n        return <Quiz />;\n      default:\n        return <p>Select a menu item.</p>;\n    }\n  };\n\n  return (\n    <div className=\"main-content\">\n      {renderContent()}\n    </div>\n  );\n};\n\nexport default MainContent;","import React, { useState } from 'react';\nimport Sidebar from './components/Sidebar';\nimport MainContent from './components/MainContent';\nimport './App.css';\n\nfunction App() {\n  const contents = ['Introduction', 'Walkway Quality', 'Unmarked Walkway', 'Bibliography', 'Quiz'];\n  const [activeContent, setActiveContent] = useState('Introduction');\n  const [highlightedCitation, setHighlightedCitation] = useState(null); // For Bibliography highlighting\n\n  // Handler to change active content\n  const handleContentChange = (content) => {\n    setActiveContent(content);\n    setHighlightedCitation(null); // Reset citation highlight when changing pages\n  };\n\n  // Handler to highlight a citation in Bibliography\n  const handleCitationClick = (citationNumber) => {\n    setActiveContent('Bibliography');\n    setHighlightedCitation(citationNumber);\n  };\n\n  // Handlers for Previous and Next buttons\n  const handlePrevious = () => {\n    const currentIndex = contents.indexOf(activeContent);\n    const previousIndex = (currentIndex - 1 + contents.length) % contents.length;\n    setActiveContent(contents[previousIndex]);\n    setHighlightedCitation(null);\n  };\n\n  const handleNext = () => {\n    const currentIndex = contents.indexOf(activeContent);\n    const nextIndex = (currentIndex + 1) % contents.length;\n    setActiveContent(contents[nextIndex]);\n    setHighlightedCitation(null);\n  };\n\n  return (\n    <div className=\"app\">\n      <Sidebar onContentChange={handleContentChange} activeContent={activeContent} />\n      <MainContent\n        content={activeContent}\n        highlightedCitation={highlightedCitation}\n        onCitationClick={handleCitationClick}\n        onContentChange={handleContentChange} // Pass handleContentChange to MainContent\n      />\n      <div className=\"navigation-buttons\">\n        <button onClick={handlePrevious} className=\"nav-button\">Previous</button>\n        <button onClick={handleNext} className=\"nav-button\">Next</button>\n      </div>\n    </div>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n    <App/>\n);"],"sourceRoot":""}